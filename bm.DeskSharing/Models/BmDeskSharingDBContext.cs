// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace bm.DeskSharing.Models;

public partial class BmDeskSharingDBContext : DbContext
{
    public BmDeskSharingDBContext(DbContextOptions<BmDeskSharingDBContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Building> Buildings { get; set; }

    public virtual DbSet<Desk> Desks { get; set; }

    public virtual DbSet<Floor> Floors { get; set; }

    public virtual DbSet<Room> Rooms { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Building>(entity =>
        {
            entity.HasKey(e => e.BID);

            entity.ToTable("Building");

            entity.Property(e => e.BCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.BDesc)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.BName)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.isActive).HasDefaultValueSql("('TRUE')");
            entity.Property(e => e.sUser)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.tsCreated).HasColumnType("datetime");
            entity.Property(e => e.tsModify).HasColumnType("datetime");
        });

        modelBuilder.Entity<Desk>(entity =>
        {
            entity.HasKey(e => e.DID);

            entity.ToTable("Desk");

            entity.Property(e => e.DCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.DDesc)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.DType)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.isActive).HasDefaultValueSql("('TRUE')");
            entity.Property(e => e.sUser)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.tsCreated).HasColumnType("datetime");
            entity.Property(e => e.tsModify).HasColumnType("datetime");

            entity.HasOne(d => d.fkR).WithMany(p => p.Desks)
                .HasForeignKey(d => d.fkRID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Desk_Room");
        });

        modelBuilder.Entity<Floor>(entity =>
        {
            entity.HasKey(e => e.FID);

            entity.ToTable("Floor");

            entity.Property(e => e.FCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.FDesc)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.FName)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.isActive).HasDefaultValueSql("('TRUE')");
            entity.Property(e => e.sUser)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.tsCreated).HasColumnType("datetime");
            entity.Property(e => e.tsModify).HasColumnType("datetime");

            entity.HasOne(d => d.fkB).WithMany(p => p.Floors)
                .HasForeignKey(d => d.fkBID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Floor_Building");
        });

        modelBuilder.Entity<Room>(entity =>
        {
            entity.HasKey(e => e.RID);

            entity.ToTable("Room");

            entity.Property(e => e.DiagramJson).IsRequired();
            entity.Property(e => e.RCode)
                .IsRequired()
                .HasMaxLength(10);
            entity.Property(e => e.RDesc)
                .IsRequired()
                .HasMaxLength(100);
            entity.Property(e => e.RName)
                .IsRequired()
                .HasMaxLength(30);
            entity.Property(e => e.isActive).HasDefaultValueSql("('TRUE')");
            entity.Property(e => e.sUser)
                .IsRequired()
                .HasMaxLength(20);
            entity.Property(e => e.tsCreated).HasColumnType("datetime");
            entity.Property(e => e.tsModify).HasColumnType("datetime");

            entity.HasOne(d => d.fkF).WithMany(p => p.Rooms)
                .HasForeignKey(d => d.fkFID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Room_Floor");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}